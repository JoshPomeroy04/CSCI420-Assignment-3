{
    "R1": "import io.ktor.application.*\nimport io.ktor.http.*\nimport io.ktor.request.*\nimport io.ktor.response.*\nimport io.ktor.routing.*\nimport io.ktor.server.engine.*\nimport io.ktor.server.netty.*\nimport kotlinx.serialization.Serializable\nimport io.ktor.features.ContentNegotiation\nimport io.ktor.serialization.json\n\n\n// 1. Product Data Class\n@Serializable\ndata class Product(val id: Int, val name: String, val price: Double)\n\n\n// 2. In-memory product storage\nval products = mutableListOf<Product>()\n\n\n// 3. Main entry point\nfun main() {\n    embeddedServer(Netty, port = 8080) {\n        install(ContentNegotiation) {\n            json() // Enable JSON support\n        }\n        routing {\n            // GET all products\n            get(\"/products\") {\n                call.respond(products)\n            }\n\n\n            // POST a new product\n            post(\"/products\") {\n                val product = call.receive<Product>()\n                products.add(product)\n                call.respond(HttpStatusCode.Created, product)\n            }\n        }\n    }.start(wait = true)\n}",
    "R2": "import io.ktor.server.engine.*\nimport io.ktor.server.netty.*\nimport io.ktor.server.application.*\nimport io.ktor.server.plugins.contentnegotiation.*\nimport io.ktor.serialization.kotlinx.json.*\nimport io.ktor.server.response.*\nimport io.ktor.server.request.*\nimport io.ktor.server.routing.*\nimport io.ktor.http.*\nimport kotlinx.serialization.Serializable\n\n\n@Serializable\ndata class Product(val id: Int, val name: String, val price: Double)\n\n\nval products = mutableListOf<Product>()\n\n\nfun main() {\n    embeddedServer(Netty, port = 8080) {\n        install(ContentNegotiation) {\n            json()\n        }\n        routing {\n            get(\"/products\") {\n                call.respond(products)\n            }\n            post(\"/products\") {\n                val product = call.receive<Product>()\n                products.add(product)\n                call.respond(HttpStatusCode.Created, product)\n            }\n        }\n    }.start(wait = true)\n}"
}